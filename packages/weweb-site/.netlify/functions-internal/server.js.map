{
  "version": 3,
  "sources": ["../../server.js", "../../../../node_modules/@remix-run/dev/compiler/shims/react.ts", "server-entry-module:@remix-run/dev/server-build", "../../app/entry.server.tsx", "/Users/hector/code_projects/WeWeb/we-web/packages/weweb-site/app/root.tsx", "/Users/hector/code_projects/WeWeb/we-web/packages/weweb-site/app/routes/index.tsx", "../../app/plasmic-init.ts", "/Users/hector/code_projects/WeWeb/we-web/packages/weweb-site/app/routes/$.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["import { createRequestHandler } from \"@remix-run/netlify\";\nimport * as build from \"@remix-run/dev/server-build\";\n\n/*\n * Returns a context object with at most 3 keys:\n *  - `netlifyGraphToken`: raw authentication token to use with Netlify Graph\n *  - `clientNetlifyGraphAccessToken`: For use with JWTs generated by\n *    `netlify-graph-auth`.\n *  - `netlifyGraphSignature`: a signature for subscription events. Will be\n *    present if a secret is set.\n */\nfunction getLoadContext(event, context) {\n  let rawAuthorizationString;\n  let netlifyGraphToken;\n\n  if (event.authlifyToken != null) {\n    netlifyGraphToken = event.authlifyToken;\n  }\n\n  let authHeader = event.headers[\"authorization\"];\n  let graphSignatureHeader = event.headers[\"x-netlify-graph-signature\"];\n\n  if (authHeader != null && /Bearer /gi.test(authHeader)) {\n    rawAuthorizationString = authHeader.split(\" \")[1];\n  }\n\n  let loadContext = {\n    clientNetlifyGraphAccessToken: rawAuthorizationString,\n    netlifyGraphToken: netlifyGraphToken,\n    netlifyGraphSignature: graphSignatureHeader,\n  };\n\n  // Remove keys with undefined values\n  Object.keys(loadContext).forEach((key) => {\n    if (loadContext[key] == null) {\n      delete loadContext[key];\n    }\n  });\n\n  return loadContext;\n}\n\nexport const handler = createRequestHandler({\n  build,\n  getLoadContext,\n  mode: process.env.NODE_ENV,\n});\n", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "\nimport * as entryServer from \"/Users/hector/code_projects/WeWeb/we-web/packages/weweb-site/app/entry.server.tsx\";\nimport * as route0 from \"/Users/hector/code_projects/WeWeb/we-web/packages/weweb-site/app/root.tsx\";\nimport * as route1 from \"/Users/hector/code_projects/WeWeb/we-web/packages/weweb-site/app/routes/index.tsx\";\nimport * as route2 from \"/Users/hector/code_projects/WeWeb/we-web/packages/weweb-site/app/routes/$.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/$\": {\n      id: \"routes/$\",\n      parentId: \"root\",\n      path: \"*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\n// Main APP\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "// This page will show up at the route /mypage\n\nimport {\n  PlasmicRootProvider,\n  PlasmicComponent,\n} from \"@plasmicapp/loader-react\";\nimport { PLASMIC } from \"../plasmic-init\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\n\n// Fetch the data needed to render Plasmic pages or components, server-side.\nexport const loader = async () => {\n  // You can pass in multiple page paths or component names.\n  const plasmicData = await PLASMIC.fetchComponentData(\"/\");\n  return json(plasmicData);\n};\n\n// Render the page or component from Plasmic.\nexport default function MyPage() {\n  const plasmicData = useLoaderData();\n  return (\n    <PlasmicRootProvider loader={PLASMIC} prefetchedData={plasmicData}>\n      <PlasmicComponent component=\"/\" />\n    </PlasmicRootProvider>\n  );\n}\n", "import { initPlasmicLoader } from \"@plasmicapp/loader-react\";\nexport const PLASMIC = initPlasmicLoader({\n  projects: [\n    {\n      id: \"wx6aoo7FZEXNn8vLYsSQDm\", // ID of a project you are using\n      token:\n        \"39OfoCA8DpPRl77qnd0OaDy2KwrCTemIsjbkKs6nngQB5wbDSzIUVEdCS9uHoEAq22pzz4yysDLOMT7Uaw\", // API token for that project\n    },\n  ],\n  // Fetches the latest revisions, whether or not they were unpublished!\n  // Disable for production to ensure you render only published changes.\n  preview: true,\n});\n", "// This page will show up at generic /page here\n\nimport {\n  PlasmicRootProvider,\n  PlasmicComponent,\n} from \"@plasmicapp/loader-react\";\nimport { PLASMIC } from \"../plasmic-init\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\n\n// Fetch the data needed to render Plasmic pages or components, server-side.\nexport const loader = async ({ params }) => {\n  const page = params[\"*\"];\n  // You can pass in multiple page paths or component names.\n  const plasmicData = await PLASMIC.fetchComponentData(`/${page}`);\n  return json(plasmicData)\n    .json()\n    .then((result) => ({ renderData: result, page }));\n};\n\n// Render the page or component from Plasmic.\nexport default function MyPage() {\n  const { renderData: plasmicData, page } = useLoaderData();\n  return (\n    <PlasmicRootProvider loader={PLASMIC} prefetchedData={plasmicData}>\n      <PlasmicComponent component={`/${page}`} />\n    </PlasmicRootProvider>\n  );\n}\n", "export default {'version':'22816077','entry':{'module':'/build/entry.client-HQBHXYW6.js','imports':['/build/_shared/chunk-C2BPGIMH.js','/build/_shared/chunk-44I7NOWX.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-JO63RMQP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$':{'id':'routes/$','parentId':'root','path':'*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$-T6WTGAI5.js','imports':['/build/_shared/chunk-7CIUZH3R.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-LJWGAHXG.js','imports':['/build/_shared/chunk-7CIUZH3R.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-22816077.js'};"],
  "mappings": "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",
  "names": []
}
